name: 'Arturo action'
description: 'Setup Arturo environment'
inputs:
    mode:
        description: >-
            The Arturo version to install
            (one of: 'mini', 'full', 'web')
        default: 'full'
    token:
        description: >-
            The GITHUB_TOKEN secret.
        required: true
    arch:
        description: >-
            The architecture to build for.
            (one of: 'x86', 'arm', 'arm64', 'amd64', 'native')
        default: 'native'
runs:
    using: "composite"
    steps:
        - name: Clone Arturo repository
          run: |
            git clone https://github.com/arturo-lang/arturo.git
          shell: bash

        - name: Get Date
          id: get-date
          run: echo "::set-output name=date::$(date "+%Y-%m-%d")"
          shell: bash

        - name: Debugging
          run: |
            echo ${{ runner.os }}
            echo ${{ runner.arch }}
          shell: bash

        - name: Cache ChooseNim
          if: runner.os == 'Linux' || runner.os == 'macOS'
          id: cache-choosenim
          uses: actions/cache@v3
          with:
            path: ~/.choosenim
            key: ${{ runner.os }}-choosenim-${{ steps.get-date.outputs.date }}
  
        - name: Cache Nimble
          if: runner.os == 'Linux' || runner.os == 'macOS'
          id: cache-nimble
          uses: actions/cache@v3
          with:
            path: ~/.nimble
            key: ${{ runner.os }}-nimble-${{ hashFiles('*.nimble') }}

        - name: Install Nim (Linux)
          if: runner.os == 'Linux'
          uses: jiro4989/setup-nim-action@v1
          with:
            nim-version: '2.0.4'
            repo-token: ${{ inputs.token }}

        - name: Install Nim (macOS)
          if: runner.os == 'macOS'
          run: |
            brew install nim
          shell: bash

        - name: Install Nim (Windows)
          if: runner.os == 'Windows'
          run: |
            echo "done"
          shell: bash

        - name: Install dependencies (Linux / mini / x86)
          if: runner.os == 'Linux' && inputs.mode == 'mini' && inputs.arch == 'x86'
          run: |
            sudo apt-get update
            sudo apt-get install gcc-multilib g++-multilib
          shell: bash

        - name: Install dependencies (Linux / mini / arm)
          if: runner.os == 'Linux' && inputs.mode == 'mini' && (inputs.arch == 'arm' || inputs.arch == 'arm64')
          run: |
            sudo apt-get update
            sudo apt-get install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
          shell: bash

        - name: Install dependencies (Linux / full)
          if: runner.os == 'Linux' && inputs.mode != 'mini'
          run: |
            sudo apt-get update
            sudo apt-get install libgtk-3-dev libwebkit2gtk-4.0-dev libmpfr-dev
          shell: bash

        - name: Install dependencies (macOS / arm)
          if: runner.os == 'macOS' && runner.arch == 'ARM64' && inputs.mode != 'mini'
          run: |
            brew install gmp
            brew install pcre
            brew install mpfr
          shell: bash
        
        - name: Compile Arturo (Windows/Linux/macOS - native)
          if: (inputs.arch == 'native' || inputs.arch == 'amd64') && runner.arch != 'ARM64'
          run: |
            cd arturo
            ./build.nims --install --mode ${{inputs.mode}} --arch amd64 --log
            echo "$HOME/.arturo/bin" >> $GITHUB_PATH
            cd ..
          shell: bash

        - name: Compile Arturo (macOS - M1)
          if: (inputs.arch == 'native' || inputs.arch == 'arm64') &&  (runner.os == 'macOS' && runner.arch == 'ARM64')
          run: |
            cd arturo
            ./build.nims --install --mode ${{inputs.mode}} --arch arm64 --log
            echo "$HOME/.arturo/bin" >> $GITHUB_PATH
            cd ..
          shell: bash

        - name: Compile Arturo (macOS - M1)
          if: inputs.arch != 'native' && runner.os == 'Linux'
          run: |
            cd arturo
            ./build.nims --install --mode ${{inputs.mode}} --arch ${{inputs.arch}} --log
            echo "$HOME/.arturo/bin" >> $GITHUB_PATH
            cd ..
          shell: bash

branding:
    icon: terminal
    color: purple